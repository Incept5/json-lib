version: 2.1

orbs:
  gradle: circleci/gradle@3.0.0

jobs:
  build-and-test:
    machine:
      image: ubuntu-2204:current
    steps:
      - checkout
      - run:
          name: Install JDK 21
          command: |
            sudo apt-get update -y
            sudo apt-get install -y openjdk-21-jdk
            java -version
      - gradle/with_cache:
          steps:
            - run:
                name: Build and Test
                command: ./gradlew clean build
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports
          destination: reports

  publish:
    machine:
      image: ubuntu-2204:current
    steps:
      - checkout
      - run:
          name: Install JDK 21
          command: |
            sudo apt-get update -y
            sudo apt-get install -y openjdk-21-jdk
            java -version
      - run:
          name: Set Version
          command: |
            # Check if we're on the main branch
            if [ "${CIRCLE_BRANCH}" == "main" ]; then
              # For main branch, use the build number for versioning
              echo "export VERSION=1.0.${CIRCLE_BUILD_NUM}" >> $BASH_ENV
              echo "export IS_MAIN_BRANCH=true" >> $BASH_ENV
            else
              # For other branches, use SNAPSHOT versioning
              echo "export VERSION=1.0.0-SNAPSHOT" >> $BASH_ENV
              echo "export IS_MAIN_BRANCH=false" >> $BASH_ENV
            fi
            source $BASH_ENV
            echo "Using version: ${VERSION}"
      - gradle/with_cache:
          steps:
            - run:
                name: Build with Version
                command: |
                  ./gradlew clean build -Pversion=${VERSION}
            - run:
                name: Publish to Local Maven Repository
                command: |
                  ./gradlew publishToMavenLocal -Pversion=${VERSION}
      - run:
          name: Create and Push Git Tag (Main Branch Only)
          command: |
            if [ "${IS_MAIN_BRANCH}" == "true" ]; then
              git config user.email "ci@incept5.com"
              git config user.name "CircleCI"
              
              # Check if tag already exists
              if git rev-parse "${VERSION}" >/dev/null 2>&1; then
                echo "Tag ${VERSION} already exists, skipping tag creation"
              else
                git tag -a "${VERSION}" -m "Release version ${VERSION}"
                git push origin "${VERSION}"
              fi
              
              # Trigger JitPack build
              echo "Triggering JitPack build for version ${VERSION}"
              curl -s "https://jitpack.io/com/github/incept5/json-lib/${VERSION}/json-lib-${VERSION}.pom" || true
              
              echo "JitPack build triggered. Check status at: https://jitpack.io/#incept5/json-lib/${VERSION}"
            else
              echo "Skipping tag creation and JitPack publication for non-main branch"
              echo "SNAPSHOT version ${VERSION} is only published to local Maven repository"
            fi

workflows:
  version: 2
  build-test-publish:
    jobs:
      - build-and-test
      - publish:
          requires:
            - build-and-test
